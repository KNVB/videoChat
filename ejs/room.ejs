<html>
	<head>
		<!-- Required meta tags -->
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
		<!-- Optional JavaScript -->
		<!-- jQuery first, then Popper.js, then Bootstrap JS -->
		<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
		<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
		<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI" crossorigin="anonymous"></script>
		<script src="https://kit.fontawesome.com/145b006857.js" crossorigin="anonymous"></script>
		<script src="/socket.io/socket.io.js"></script>
		<script src="js/LocalMedia.js"></script>
		<script src="js/MediaChannel.js"></script>
		<script>
			var localMedia=new LocalMedia();
			var mediaChannel=new MediaChannel();
			var socket = io.connect();
			

			$( document ).ready(function(){
				$("#audioSrcLabel").click(function (){
					if ($(this).hasClass("active")) {
						$(this).removeClass("btn-success").addClass("btn-danger");
						$(this).children(".badge").removeClass("badge-success").addClass("badge-danger");
						$(this).children(".badge").text("Off");
					} else {
						$(this).removeClass("btn-danger").addClass("btn-success");
						$(this).children(".badge").removeClass("badge-danger").addClass("badge-success");
						$(this).children(".badge").text("On");
					}
				});
				$(window).resize(()=>{
					$("html,body").height(window.innertHeight);
				});
				$(".fa-share-alt").click(()=>{

					if (navigator.share) {
						var shareData={"title": 'Video Chat Link',"text": 'This is the video Chat link'};
						shareData["url"]=getShareLink();
						navigator.share(shareData);
					} else {
						copyLink();
					}
				});
				mediaChannel.setLogger(writeLog);
				mediaChannel.setSocket(socket);
				socket.emit("updateSocketId",{"user":<%-JSON.stringify(user)%>,"roomId":"<%=roomId%>"});
				$("#videoSrc").val("<%=user.shareMedia.videoSrc%>");
				$("#shareAudio").val("<%=user.shareMedia.shareAudio%>");

<%if (isHost) {%>
				updateSrc();
<%} else {%>
<%}%>				
			});
			function copyLink() {
				const el = document.createElement('textarea');
				el.value = getShareLink();
				document.body.appendChild(el);
				el.select();
				document.execCommand('copy');
				document.body.removeChild(el);
				alert("The link for this room is copied to clipboard");
			}
			function clearVideo(){
				if (selfView.srcObject!=null) {
					selfView.srcObject.getTracks().forEach((track)=>{
						track.stop();
					});
					selfView.srcObject=null;
				}
			}
			function getShareLink(){
				var url = window.location.href;
				var arr = url.split("/");
				var result = arr[0] + "//" + arr[2]+"/joinRoom?roomId=<%=roomId%>";
				return result;
			}
			function setupVideo(stream){
				selfView.srcObject=stream;
				stream.getTracks().forEach((track)=> {
					track.onended=(()=>{
						track.stop();
						if (selfView.srcObject!=null)
							selfView.srcObject=null;
					});
				});
			}
			async function updateSrc(){
				var videoSrc=document.getElementById("videoSrc");
				clearVideo();
				switch ($(videoSrc).val()){
					case "screen":	var stream=await localMedia.getShareDesktopVideo();
									if (stream==null) {
										alert("Fail to get video from share desktop");
									} else {
										setupVideo(stream);
									}
									break;
					
					case "webCam":	var stream=await localMedia.getWebCamVideo();
									if (stream==null) {
										alert("Fail to get video from web cam");
									} else {
										setupVideo(stream);
									}
									break;
				}				
			}
			socket.on("getMediaOffer",async function(req){
				mediaChannel.createConnection();
				try{
					var offer=await mediaChannel.createOffer();
					//req={"isHost":<%=isHost%>,"roomId":"<%=roomId%>","senderEmail":"<%=user.email%>","receiverEmail":newMember.email};
					var res={};
					res["senderIsHost"]="<%=isHost%>";
					res["roomId"]=req.roomId;
					res["senderEmail"] = req.receiverEmail;
					res["receiverEmail"] = req.senderEmail;
					res["receiverIsHost"]=req.senderIsHost;
					mediaChannel.setChannelInfo(res);
					res["offer"]=offer;
					socket.emit('send_offer',res);
					writeLog("Offer send to target "+req.senderEmail+" via server");
				} catch (error) {
					writeLog("Failed to get MediaOffer for "+req.senderEmail+":"+error);
				}
			});
			socket.on("receiveAnswer",async function(res){
				try {
					await mediaChannel.setRemoteDescription(res.answer);
				} catch(error) {
					writeLog("Failed to set setRemoteDescription for "+res.senderEmail+":"+error);
				}	
			});
			socket.on("receiveOffer",async function(res){
				try{
					answer=await mediaChannel.createAnswer(res.offer);
					writeLog(answer);
					//req={"isHost":<%=isHost%>,"roomId":"<%=roomId%>","senderEmail":"<%=user.email%>","receiverEmail":newMember.email};
					req={}
					req["senderIsHost"]="<%=isHost%>";
					req["roomId"]=res.roomId;
					req["answer"]=answer;
					req["senderEmail"] = res.receiverEmail;
					req["receiverEmail"] = res.senderEmail;
					socket.emit('send_answer',req);
				} catch(error) {
					writeLog("Failed to create answer for "+res.resMemberEmail+":"+error);
				}
			});
			socket.on("newMemberJoinTheMeeting",function(res){
				var newMember=res.newMember;
				var item ="<li class=\"media border border-secondary\" id=\""+newMember.email+"\">";
				if ((<%=isHost%>) && ("<%=user.email%>"==newMember.email))
					item+="Hosts &nbsp;&nbsp;";
				else
					item+="<video style=\"widht:120px;height:60px\" controls></video>";
				item+="<div class=\"media-body align-self-center\">";
				item+=newMember.alias+"</div></li>";
				$("#memberCount").text("("+res.memberCount+")");
				$("#memberList").append(item);
				var req={};
				req["receiverEmail"]=newMember.email;
				req["receiverIsHost"]=res.isHost;
				req["senderIsHost"]="<%=isHost%>";
				req["senderEmail"]="<%=user.email%>";
				req["roomId"]="<%=roomId%>";
				
				mediaChannel.createConnection();
				mediaChannel.setChannelInfo(req);				
				socket.emit("getMemberMediaOffer",req);
			});
			socket.on("memberLeaveTheMeeting",function(data){
				var email=data.member.email;
				$("#memberCount").text("("+data.memberCount+")");
				/*
					To use any of the meta-characters ( such as  !"#$%&'()*+,./:;<=>?@[\]^`{|}~ ) as a literal part of 
					a name, it must be escaped with with two backslashes: \\. For example, an element with id="foo.bar", 
					can use the selector $("#foo\\.bar"). 
					
					https://api.jquery.com/category/selectors/
				*/
				document.getElementById(email).remove(); //To prevent the above problem, I use DOM to remove the element.
			});
<%if (isHost) {%>
			function closeTheMeeting(){
				clearVideo();
				document.getElementById("closeMeetingForm").submit();
			}			
<%} else {%>
			function leaveTheMeeting(){
				clearVideo();
				document.getElementById("leaveMeetingForm").submit();
			}
<%}%>								
			function writeLog(message){
				console.log(message);
			}
		</script>
		<style>
			video{
				object-fit:cover;
			}
		</style>	
	</head>
	<body class="p-1">
		<div class="p-0 container-fluid d-flex h-100 flex-column border border-danger">
			<div class="p-0 row h-50 no-gutters">
				<div class="p-0 col-12 col-sm-12 col-lg-12 col-xl-12 position-relative">
					<video id="selfView" class="h-100 w-100 position-absolute" autoplay controls muted>
					</video>
				</div>
			</div>
			<div class="p-0 row h-50 border border-secondary no-gutters">
				<div class="col p-1 d-flex flex-column">
					<div class="d-flex flex-row align-items-center justify-content-center">
						<div class="btn-group-toggle p-1">
							<label class="btn-sm btn btn-lg btn-success">			
								Alias:<%=user.alias%>
							</label>
						</div>	
						<div class="btn-group-toggle p-1">
							<label class="btn-sm btn btn-lg btn-success">
								Share 
								<select name="videoSrc" id="videoSrc" class="bg-success text-white" onchange="updateSrc()">
									<option value="no" >No</option>
									<option value="webCam">Web Cam</option>
									<option value="screen">Screen</option>
								</select>
								Video
							</label>
						</div>
						<div class="btn-group-toggle p-1">
							<label class="btn-sm btn btn-lg btn-success">
								Share Audio
								<select name="shareAudio" id="shareAudio" class="bg-success text-white">
									<option value="yes">Yes</option>
									<option value="no" >No</option>
								</select>
							</label>
						</div>
<%if (isHost) {%>						
						<div class="btn-group-toggle d-flex justify-content-center p-1">
							<button class="btn-sm btn btn-lg btn-success" onclick="closeTheMeeting()">Close the meeting</button>
						</div>
						<form id="closeMeetingForm" method="post" action="/closeTheMeeting">
							<input type=hidden name="roomId" value="<%=roomId%>">
						</form>

<%} else {%>
						<div class="btn-group-toggle d-flex justify-content-center p-1">
							<button class="btn-sm btn btn-lg btn-success" onclick="leaveTheMeeting()">Leave the meeting</button>
						</div>
						<form id="leaveMeetingForm" method="post" action="/leaveTheMeeting">
							<input type=hidden name="userEmail" value="<%=user.email%>">
							<input type=hidden name="roomId" value="<%=roomId%>">
						</form>
<%}%>					
					</div>	
					
					<ul class="nav nav-pills p-1 justify-content-around" id="pills-tab" role="tablist">
					  <li class="nav-item">
						<a class="nav-link active" 
							id="pills-info-tab" data-toggle="pill" 
							href="#pills-info" role="tab" aria-controls="pills-info" aria-selected="true">
							<i class="fas fa-2x fa-info-circle"></i>
						</a>
					  </li>
					  <li class="nav-item">
						<a class="nav-link" 
							id="pills-member-tab" data-toggle="pill" 
							href="#pills-member" role="tab" aria-controls="pills-member" aria-selected="false">
							<i class="fas fa-2x fa-user-friends"></i><span id="memberCount">(<%=room.getUserCount()%>)</span>
						</a>
					  </li>
					  <li class="nav-item">
						<a class="nav-link" 
							id="pills-message-tab" data-toggle="pill" 
							href="#pills-message" role="tab" aria-controls="pills-message" aria-selected="false">
							<i class="far fa-2x fa-comment"></i><div id="unreadMessageCount"></div>
						</a>
					  </li>
					</ul>
					<div class="tab-content flex-grow-1 position-relative border border-warning p-0" id="pills-tabContent">
						<div class="p-1 tab-pane fade show active" id="pills-info" role="tabpanel" aria-labelledby="pills-info-tab">
							<i class="fas fa-2x fa-share-alt" style="cursor:pointer"></i><br>
						</div>
						<div class="p-1 tab-pane fade position-absolute h-100 w-100 overflow-auto" id="pills-member" role="tabpanel" aria-labelledby="pills-info-tab">
							<ul id="memberList" class="list-unstyled">
<%						Object.keys(room.getUserList()).forEach((key)=>{
							var user=room.getUserList()[key];
							if (room.isHost(user)){%>
								<li class="media border border-secondary" id="<%=user.email%>">
									Hosts &nbsp;&nbsp;
									<div class="media-body">
										<%=user.alias%>
									</div>
								</li>
<%							
							} else {%>								
								<li class="media border border-secondary" id="<%=user.email%>">
									<video style="widht:120px;height:60px" controls></video>
									<div class="media-body align-self-center">
										<%=user.alias%>
									</div>	
								</li>	
<%							}
						});%>								
							</ul>
						</div>
						<div class="tab-pane fade position-absolute h-100 w-100 p-0" id="pills-message" role="tabpanel" aria-labelledby="pills-message-tab">
							<div class="d-flex flex-column position-relative p-0 h-100 w-100">
								<div id="chatMessageHistory" class="p-1 w-100 flex-grow-1 overflow-auto">
								</div>
								<input type="text" id="messageText" placeholder="Send message to all member">
							</div>
						</div>
					</div>
				</div>		
			</div>
		</div>
	</body>
</html>